/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package co.edu.unicauca.mvc.vistas.adminConferencia;

import co.edu.unicauca.mvc.controladores.ServicioAlmacenamientoConferencias;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JLabel;
import javax.swing.JTextField;
import co.edu.unicauca.mvc.modelos.Conferencia;
import co.edu.unicauca.mvc.utilidades.Utilidades;

/**
 *
 * @author Default
 */
public class VtnRegistrarConferencia extends VtnRegistrar {
    
    private final ServicioAlmacenamientoConferencias objServicioAlmacenamiento;
    /**
     * Creates new form VtnRegistrarConferencia
     * @param objServicioAlmacenamiento
     */
    public VtnRegistrarConferencia(ServicioAlmacenamientoConferencias objServicioAlmacenamiento) {
        super(new JLabel("Registrar Conferencia"), new String[]{"Nombre:","Fecha inicio:","Fecha fin:","Costo:"});
        this.objServicioAlmacenamiento = objServicioAlmacenamiento;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @Override
    protected void registrarAction()
    {
        ArrayList<String> values = new ArrayList<>();
        for (JTextField input : inputs) {
            values.add(input.getText());
        }

        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        try {
            Date fechaInicio = dateFormat.parse(values.get(1));
            Date fechaFin = dateFormat.parse(values.get(2));

            if (fechaFin.before(fechaInicio)) {
                Utilidades.mensajeAdvertencia("La fecha de fin debe ser posterior a la fecha de inicio", "Fecha no válida");
                return;
            }

            float costo = Float.parseFloat(values.get(3));
            Conferencia objConferencia = new Conferencia(values.get(0), fechaInicio, fechaFin, costo);

            if (this.objServicioAlmacenamiento.almacenarConferencia(objConferencia)) {
                Utilidades.mensajeExito("El registro de la conferencia fue exitoso", "Registro exitoso");
            } else {
                Utilidades.mensajeError("El registro de la conferencia no se realizó", "Error en el registro");
            }

        } catch (NumberFormatException ex) {
            Utilidades.mensajeAdvertencia("El costo debe ser numérico", "Formato de costo inválido");
        } catch (ParseException ex) {
            Utilidades.mensajeAdvertencia("La fecha debe seguir el formato dd/MM/yyyy", "Formato de fecha inválido");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
