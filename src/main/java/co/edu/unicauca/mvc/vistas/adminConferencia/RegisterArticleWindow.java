/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package co.edu.unicauca.mvc.vistas.adminConferencia;

import co.edu.unicauca.mvc.controllers.StorageService;
import co.edu.unicauca.mvc.dataAccess.GeneralRepository;
import co.edu.unicauca.mvc.dataAccess.MemoryArrayListRepository;
import co.edu.unicauca.mvc.infrastructure.Observer;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JTextField;
import co.edu.unicauca.mvc.models.Article;
import co.edu.unicauca.mvc.models.Author;
import co.edu.unicauca.mvc.utilities.Elements;
import co.edu.unicauca.mvc.utilities.FieldConfig;
import co.edu.unicauca.mvc.utilities.Utilities;
import java.util.LinkedHashMap;
import javax.swing.JButton;
import javax.swing.JFrame;

/**
 *
 * @author Default
 */
public class RegisterArticleWindow extends RegisterWindow {

    private int conferenceID = 0;
    private final StorageService<Author> tempAuthors;

    public RegisterArticleWindow(int conferenceID) {
        super(new JLabel("Registrar Articulo"), createInputFields());
        this.conferenceID = conferenceID;
        this.tempAuthors = new StorageService<>(new MemoryArrayListRepository<>());
    }

    private static LinkedHashMap<String, FieldConfig> createInputFields() {
        LinkedHashMap<String, FieldConfig> inputFields = new LinkedHashMap<>();
        inputFields.put("Nombre:", new FieldConfig(new JTextField(20)));
        inputFields.put("Revista:", new FieldConfig(new JTextField(20)));
        inputFields.put("", new FieldConfig(new JButton("Asignar autor")));
        return inputFields;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @Override
    protected void registerAction() {
        ArrayList<String> values = Elements.extractTextFields(fieldConfigs);
        Article article = new Article(values.get(0), values.get(1));
        GeneralRepository.getConferenceLinkServiceById(conferenceID).storeArticles(article.getId());
        GeneralRepository.storeArticle(article);
        for (Author author : tempAuthors.listAll()) {
            GeneralRepository.getArticleLinkServiceById(article.getId()).
                    storeAuthors(author.getId());
            GeneralRepository.storeAuthor(author);
        }
        Utilities.successMessage("Artículo creado correctamente", "Creación de artículo");
        cleanInputs();
    }

    @Override
    protected void extraButtonAction() {
        ListAuthorWindow objAuthorWindow
                = new ListAuthorWindow(tempAuthors);
        tempAuthors.addObserver((Observer) objAuthorWindow);
        System.out.println("Se a;adio el observador");
        objAuthorWindow.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        objAuthorWindow.setVisible(true);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
