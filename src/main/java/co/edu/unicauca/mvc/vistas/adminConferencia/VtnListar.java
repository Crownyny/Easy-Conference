/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package co.edu.unicauca.mvc.vistas.adminConferencia;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Image;
import java.awt.Insets;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.JTableHeader;

/**
 *
 * @author Default
 */
public abstract class VtnListar extends javax.swing.JInternalFrame {
    
    protected JLabel titleLabel;
    protected String registrarButtonText;
    protected String[] columnNames;
    protected JTable table;

    /**
     * Creates new form VtnListarPlantilla
     * @param titleLabel
     * @param registrarButtonText
     * @param columnNames
     */
    public VtnListar(String titleLabel, String registrarButtonText, String[] columnNames) 
    {
        
        this.titleLabel = new JLabel(titleLabel);
        this.registrarButtonText = registrarButtonText;
        this.columnNames = columnNames;
        Object[][] data ={};
        this.table = new JTable();
        this.table.setModel(new javax.swing.table.DefaultTableModel(data, columnNames));
        showGui();
    }
    
    public VtnListar(String[] columnNames) 
    {
        this.titleLabel = new JLabel();
        this.registrarButtonText = "";
        showGui();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 394, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 274, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void showGui()
    {
        // size the window
        setLayout(new BorderLayout());
        Toolkit toolkit = Toolkit.getDefaultToolkit();
        Dimension screenSize = toolkit.getScreenSize();
        int screenHeight = screenSize.height;
        int screenWidth = screenSize.width;
        int panelHeight = (int) (screenHeight*0.6);
        int panelWidth = (int) (screenWidth*0.55);
        int panelNorthHeight = (int) (panelHeight * 0.1);
        int panelCenterHeight = (int) (panelHeight * 0.85);
        int panelSouthHeight = (int) (panelHeight * 0.15);
     
        this.setSize(panelWidth,panelHeight);
        GridBagConstraints gbc = new GridBagConstraints();

        JPanel panelNorth = new JPanel(new GridBagLayout());
        panelNorth.setPreferredSize(new Dimension(panelWidth, panelNorthHeight));
        
        int titleFontsize =  Math.min(panelWidth, panelHeight) / 25;
        this.titleLabel.setForeground(Color.WHITE);
        this.titleLabel.setFont(new Font("Leelawadee UI", Font.BOLD, titleFontsize)); 
        panelNorth.add(titleLabel);
        panelNorth.setBackground(new Color(0x3c647c));
        
       
        JPanel panelCenter = new JPanel(new GridBagLayout());
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(5, 5, 5, 5);
        int buttonFontsize =  Math.min(panelWidth, panelHeight) / 30;
        
        try {
            BufferedImage iconActualizar = ImageIO.read(getClass().getResource("/recursos/print.png"));
            BufferedImage iconRegistrar = ImageIO.read(getClass().getResource("/recursos/pen-drawing.png"));
            // Redimensionar la imagen al tamaño de la fuente
            Image iconActualizarEscalado = iconActualizar.getScaledInstance(buttonFontsize, buttonFontsize, Image.SCALE_SMOOTH);
            Image iconRegistrarEscalado = iconRegistrar.getScaledInstance(buttonFontsize, buttonFontsize, Image.SCALE_SMOOTH);
            
            JButton actualizarButton = addButton("Actualizar", buttonFontsize);
            actualizarButton.setIcon(new ImageIcon(iconActualizarEscalado));
            gbc.gridx = 0; // Columna 0
            gbc.gridy = 0; // Fila 0
            gbc.gridwidth = 1; // Ocupa 1 columna
            gbc.weightx = 0.5; // Mitad de espacio horizontal 
            actualizarButton.addActionListener(e -> actualizarAction());

            panelCenter.add(actualizarButton, gbc);

            JButton registrarButton = addButton(registrarButtonText, buttonFontsize);
            registrarButton.setIcon(new ImageIcon(iconRegistrarEscalado)); 
            gbc.gridx = 1; // Columna 1
            gbc.gridy = 0; // Fila 0
            gbc.gridwidth = 1; // Ocupa 1 columna
            gbc.weightx = 0.5; // Mitad de espacio horizontal  
            registrarButton.addActionListener(e -> registrarAction());    
            panelCenter.add(registrarButton, gbc);
        
        } catch (IOException e) {}
        

                
        // Personalizar el renderizador del encabezado
        JTableHeader header = this.table.getTableHeader();
        header.setDefaultRenderer(new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value,
                                                           boolean isSelected, boolean hasFocus, int row, int column) {
                JLabel label = (JLabel) super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                label.setBackground(new Color(0x3c647c)); 
                label.setForeground(Color.WHITE); 
                label.setFont(new Font("Leelawadee UI", Font.BOLD, Math.min(panelWidth, panelHeight) / 35)); // Fuente y tamaño del texto
                label.setHorizontalAlignment(SwingConstants.CENTER); // Centrar el texto
                return label;
            }
        });
        
        // Personalizar el renderizador de las celdas para centrar el texto
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);

        // Aplicar el renderizador centrado a todas las columnas de la tabla
        for (int i = 0; i < this.table.getColumnCount(); i++) {
            this.table.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }
        JScrollPane tableScrollPane = new JScrollPane(table);
        gbc.gridx = 0; // Columna 0
        gbc.gridy = 1; // Fila 1
        gbc.gridwidth = 2; // Ocupa 2 columnas solo
        gbc.weightx = 1.0; // Distribución de espacio horizontal
        gbc.weighty = 1.0; // Distribución de espacio vertical
        gbc.fill = GridBagConstraints.BOTH; // La tabla ocupa todo el espacio
        panelCenter.add(tableScrollPane, gbc);
        panelCenter.setBackground(new Color(0xD7EAF9));
        panelCenter.setPreferredSize(new Dimension(panelWidth, panelCenterHeight));
        
        JPanel panelSouth = new JPanel();
        panelSouth.setBackground(new Color(0x7F818F));
        panelSouth.setPreferredSize(new Dimension(panelWidth, panelSouthHeight));
        
        this.getContentPane().add(panelSouth, BorderLayout.SOUTH);           
        this.getContentPane().add(panelCenter, BorderLayout.CENTER);
        this.getContentPane().add(panelNorth, BorderLayout.NORTH);
    }
    
    private JButton addButton(String buttonText, int fontsize)
    {
        JButton myButton = new JButton(buttonText);
        myButton.setBorderPainted(false);
        myButton.setBackground(new Color(0x2c4464)); // Return to transparent background
        myButton.setForeground(Color.WHITE);
        myButton.setFont(new Font("Lucida Console", Font.BOLD, fontsize)); // Fontsize doesnt matter
        myButton.setFocusPainted(false);
        myButton.setContentAreaFilled(false);
        myButton.setOpaque(true); // Make the button opaque from the start

        myButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                myButton.setBackground(new Color(52, 112, 224)); // Hover color with transparency
                myButton.repaint(); // Repaint the button
                myButton.getParent().repaint(); // Ensure the parent container is also repainted
                myButton.getParent().revalidate();
            }

            @Override
            public void mouseExited(MouseEvent e) {
                myButton.setBackground(new Color(0x2c4464)); // Return to transparent background
                myButton.repaint(); // Repaint the button and the container
                myButton.getParent().repaint(); // Ensure the parent container is also repainted
                myButton.getParent().revalidate();
            }

            @Override
            public void mouseClicked(MouseEvent e) {
                myButton.setBackground(new Color(52, 112, 224)); // Ajusta el fondo si es necesario
                myButton.repaint();
                myButton.getParent().repaint(); // Repinta el contenedor del botón
                myButton.getParent().revalidate(); // Revalida el layout del contenedor
            }
        });
        
        return  myButton;
    }
    protected abstract void registrarAction();
    protected abstract void actualizarAction();    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
