package co.edu.unicauca.mvc.vistas.adminConferencia;

import co.edu.unicauca.mvc.dataAccess.GeneralRepository;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import co.edu.unicauca.mvc.models.Organizer;

public class ListOrganizersWindow extends ListWindow {

    private final int conferenceID;

    public ListOrganizersWindow (int conferenceID) {
        super("Listado de Organizadores", "Registrar Organizadores", new String[]{"Nombres", "Apellidos", "Universidad"});
        this.conferenceID =conferenceID;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 394, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 274, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    @Override
    protected void registerAction(){
        RegisterOrganizerWindow registerOrganizerWindow =
        new RegisterOrganizerWindow(conferenceID);
        registerOrganizerWindow.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        registerOrganizerWindow.setVisible(true);       
    }

    public void clearTable(){

        DefaultTableModel model = (DefaultTableModel) this.table.getModel();
        int rows = this.table.getRowCount();
        for (int i = 0; rows > i; i++) {
            model.removeRow(0);
        }        
    }

    private void fillTable() {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        clearTable();
        ArrayList<Organizer> organizerList = (ArrayList<Organizer>) GeneralRepository.getOrganizersByConferenceId(conferenceID);
        System.out.println("Saque datos");
        for (int i = 0; i < organizerList.size(); i++) {
            String[] row = { 
                organizerList.get(i).getFirstName(), 
                organizerList.get(i).getLastName(), 
                organizerList.get(i).getUniversity() 
            };
            model.addRow(row);
        }
        
    }

    @Override
    public void update() {
        fillTable();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
